<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    <beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />

    <http auto-config="true">
        <intercept-url pattern="/member" access="hasRole('ROLE_MEMBERS')"/>
        <logout logout-success-url="/" />
    </http>

    <!--<beans:import resource="dataContext.xml"/>-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select username, password, true from users where username=?"
                               authorities-by-username-query="select username, authority from authorities where username=?"
            />
        </authentication-provider>
        <!--<authentication-provider user-service-ref="userService"/>-->
    </authentication-manager>

    <!--<beans:bean id="userService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">-->
        <!--<beans:property name="dataSource" ref="dataSource" />-->
    <!--</beans:bean>-->

    <!--<user-service id="userService">-->
        <!--<user name="kevin" password="{noop}1234" authorities="ROLE_MEMBERS"/>-->
    <!--</user-service>-->

    <!--<beans:bean id="userService" class="com.zero4kevin.spring.examples.security.MyUserDetailsService" />-->
</beans:beans>